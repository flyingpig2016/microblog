{
  "_args": [
    [
      {
        "raw": "cookie@0.0.5",
        "scope": null,
        "escapedName": "cookie",
        "name": "cookie",
        "rawSpec": "0.0.5",
        "spec": "0.0.5",
        "type": "version"
      },
      "F:\\wamp\\www\\08node\\nodeZhinan\\05.1express\\myBlog\\node_modules\\connect"
    ]
  ],
  "_from": "cookie@0.0.5",
  "_id": "cookie@0.0.5",
  "_inCache": true,
  "_location": "/connect/cookie",
  "_phantomChildren": {},
  "_requested": {
    "raw": "cookie@0.0.5",
    "scope": null,
    "escapedName": "cookie",
    "name": "cookie",
    "rawSpec": "0.0.5",
    "spec": "0.0.5",
    "type": "version"
  },
  "_requiredBy": [
    "/connect"
  ],
  "_resolved": "https://registry.npmjs.org/cookie/-/cookie-0.0.5.tgz",
  "_shasum": "f9acf9db57eb7568c9fcc596256b7bb22e307c81",
  "_shrinkwrap": null,
  "_spec": "cookie@0.0.5",
  "_where": "F:\\wamp\\www\\08node\\nodeZhinan\\05.1express\\myBlog\\node_modules\\connect",
  "author": {
    "name": "Roman Shtylman",
    "email": "shtylman@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/shtylman/node-cookie/issues"
  },
  "dependencies": {},
  "description": "cookie parsing and serialization",
  "devDependencies": {
    "mocha": "1.x.x"
  },
  "directories": {},
  "dist": {
    "shasum": "f9acf9db57eb7568c9fcc596256b7bb22e307c81",
    "tarball": "https://registry.npmjs.org/cookie/-/cookie-0.0.5.tgz"
  },
  "engines": {
    "node": "*"
  },
  "homepage": "https://github.com/shtylman/node-cookie#readme",
  "keywords": [
    "cookie",
    "cookies"
  ],
  "main": "index.js",
  "maintainers": [
    {
      "name": "shtylman",
      "email": "shtylman@gmail.com"
    }
  ],
  "name": "cookie",
  "optionalDependencies": {},
  "readme": "# cookie [![Build Status](https://secure.travis-ci.org/shtylman/node-cookie.png?branch=master)](http://travis-ci.org/shtylman/node-cookie) #\n\ncookie is a basic cookie parser and serializer. It doesn't make assumptions about how you are going to deal with your cookies. It basically just provides a way to read and write the HTTP cookie headers.\n\nSee [RFC6265](http://tools.ietf.org/html/rfc6265) for details about the http header for cookies.\n\n## how?\n\n```\nnpm install cookie\n```\n\n```javascript\nvar cookie = require('cookie');\n\nvar hdr = cookie.serialize('foo', 'bar');\n// hdr = 'foo=bar';\n\nvar cookies = cookie.parse('foo=bar; cat=meow; dog=ruff');\n// cookies = { foo: 'bar', cat: 'meow', dog: 'ruff' };\n```\n\n## more\n\nThe serialize function takes a third parameter, an object, to set cookie options. See the RFC for valid values.\n\n### path\n> cookie path\n\n### expires\n> absolute expiration date for the cookie (Date object)\n\n### maxAge\n> relative max age of the cookie from when the client receives it (seconds)\n\n### domain\n> domain for the cookie\n\n### secure\n> true or false\n\n### httpOnly\n> true or false\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/shtylman/node-cookie.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "0.0.5"
}
